{{- if .Values.aurora.enabled | default false }}

{{- $secretName := .Values.aurora.secretName | default (printf "%s-credentials" .Release.Name) }}
{{- $pwd := default "" .Values.aurora.masterUserPassword }}
{{- if not $pwd }}
  {{- $pwd = randAlphaNum 16 }}
{{- end }}

apiVersion: v1
kind: Secret
metadata:
  name: {{ $secretName }}
type: Opaque
data:
  password: {{ $pwd | b64enc | quote }}
  username: {{ .Values.aurora.masterUsername | b64enc | quote }}
---
apiVersion: rds.services.k8s.aws/v1alpha1
kind: DBCluster
metadata:
  name: {{ .Values.aurora.clusterName | default (printf "aurora-%s-cluster" .Release.Name) }}
  annotations:
    passwordRotationTimestamp: "{{ now | unixEpoch }}"
spec:
  dbClusterIdentifier: {{ .Values.aurora.clusterName | default (printf "aurora-%s-cluster" .Release.Name) }}
  engine: {{ .Values.aurora.engine | default "aurora-postgresql" | quote }}
  engineMode: provisioned
  engineVersion: {{ .Values.aurora.engineVersion | default "17.5" | quote }}
  masterUsername: {{ .Values.aurora.masterUsername | default "admin" | quote }}
  masterUserPassword:
    name: {{ $secretName | quote }}
    key: {{ .Values.aurora.secretKey | default "password" | quote }}
  dbSubnetGroupName: {{ .Values.aurora.dbSubnetGroupName | default "aurora-subnet-group" | quote }}
  vpcSecurityGroupIDs:
  {{- range .Values.aurora.securityGroupIds | default (list "sg-1234567890abcdef0") }}
    - {{ . | quote }}
  {{- end }}
  backupRetentionPeriod: {{ .Values.aurora.backupRetentionPeriod | default 7 }}
  {{- if .Values.aurora.serverless }}
  serverlessV2ScalingConfiguration:
    minCapacity: {{ .Values.aurora.serverless.minCapacity | default 0 }}
    maxCapacity: {{ .Values.aurora.serverless.maxCapacity | default 4 }}
    {{- if .Values.aurora.serverless.autoPauseSeconds }}
    secondsUntilAutoPause: {{ .Values.aurora.serverless.autoPauseSeconds }}
    {{- end }}
  {{- end }}
---
apiVersion: rds.services.k8s.aws/v1alpha1
kind: DBInstance
metadata:
  name: {{ .Values.aurora.writerName | default (printf "aurora-%s-cluster" .Release.Name) }}
spec:
  dbInstanceIdentifier: {{ .Values.aurora.writerName | default (printf "aurora-%s-cluster" .Release.Name) }}
  dbClusterIdentifier: {{ .Values.aurora.clusterName | default (printf "aurora-%s-cluster" .Release.Name) }}
  dbInstanceClass: db.serverless
  engine: {{ .Values.aurora.engine | default "aurora-postgresql" | quote }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: aurora-endpoints
data: {}
---
apiVersion: services.k8s.aws/v1alpha1
kind: FieldExport
metadata:
  name: aurora-writer-export
spec:
  from:
    resource:
      group: rds.services.k8s.aws
      kind: DBCluster
      name: {{ .Values.aurora.clusterName | default (printf "aurora-%s-cluster" .Release.Name) }}
    path: ".status.endpoint"
  to:
    kind: configmap
    name: aurora-endpoints
    key: writerEndpoint
---
apiVersion: services.k8s.aws/v1alpha1
kind: FieldExport
metadata:
  name: aurora-reader-export
spec:
  from:
    resource:
      group: rds.services.k8s.aws
      kind: DBCluster
      name: {{ .Values.aurora.clusterName | default (printf "aurora-%s-cluster" .Release.Name) }}
    path: ".status.readerEndpoint"
  to:
    kind: configmap
    name: aurora-endpoints
    key: readerEndpoint
{{- end }}
