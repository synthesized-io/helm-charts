apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.api.name }}
  labels:
    app: {{ .Values.api.name }}
    group: {{ .Values.api.group }}
spec:
  replicas: {{ .Values.api.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.api.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.api.name }}
        group: {{ .Values.api.group }}
    spec:
      {{- with .Values.api.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.api.securityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Values.api.name }}
          image: "{{ .Values.api.image.repository }}:{{ .Values.api.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.api.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.api.container.port }}
            - containerPort: {{ .Values.api.container.grpcPort }}
          resources:
            {{- toYaml .Values.api.resources | default "{}" | nindent 12 }}
          envFrom:
            - configMapRef:
                name: {{ .Values.api.name }}-configmap
            - secretRef:
                name: {{ .Values.api.name }}-secret
          env:
          {{- if .Values.aurora.enabled | default false }}
            - name: SPRING_DATASOURCE_URL
              value: 'jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}'
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: aurora-endpoints
                  key: writerEndpoint
            - name: DB_PORT
              value: "{{ .Values.aurora.port | default 5432 }}"
            - name: DB_NAME
              value: {{ .Values.aurora.databaseName | default "postgres" }}
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.aurora.secretName }}
                  key: username
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.aurora.secretName }}
                  key: password
            {{- end }}
            {{- range .Values.api.container.secretenv }}
            - name: {{ .name }}
              valueFrom:
                secretKeyRef:
                  name: {{ .valueFrom.secretKeyRef.name }}
                  key: {{ .valueFrom.secretKeyRef.key }}
            {{- end}}
          readinessProbe:
            httpGet:
              path: /api/v1/healthy
              port: {{ .Values.api.container.port }}
            initialDelaySeconds: 10
            periodSeconds: 10
          volumeMounts:
          {{- if .Values.api.persistence.enabled }}
            - name: {{ .Values.api.persistence.name }}
              mountPath: {{ .Values.api.persistence.mountPath }}
          {{- end }}
            - name: spiffe-workload-api
              mountPath: /spiffe-workload-api
              readOnly: true
      volumes:
      {{- if .Values.api.persistence.enabled }}
        - name: {{ .Values.api.persistence.name }}
          persistentVolumeClaim:
            claimName: {{ .Values.api.persistence.claimName }}
      {{- end }}
        - name: spiffe-workload-api
          csi:
            driver: "csi.spiffe.io"
            readOnly: true
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
